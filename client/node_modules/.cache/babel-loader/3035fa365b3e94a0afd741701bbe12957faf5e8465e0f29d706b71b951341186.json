{"ast":null,"code":"var _jsxFileName = \"/home/mulubrhan/Documents/MERN/client/src/components/screens/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\"); // New state variable for the comment input field\n\n  useEffect(() => {\n    fetch(\"/allpost\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      setData(result.posts);\n    });\n  }, []);\n  const likepost = id => {\n    // ...\n  };\n  const unlikepost = id => {\n    // ...\n  };\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id === result._id) {\n          return {\n            ...item,\n            likes: result.likes\n          };\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n      setComment(\"\"); // Reset the comment input field\n    });\n  };\n\n  const handleCommentSubmit = (e, postId) => {\n    if (e.key === \"Enter\") {\n      makeComment(comment, postId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"add a comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            onKeyPress: e => handleCommentSubmit(e, item._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GHx/TUSuZE7FTcInymyaA36mnZ0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","user","JSON","parse","localStorage","getItem","data","setData","comment","setComment","fetch","headers","then","res","json","result","posts","likepost","id","unlikepost","makeComment","text","postId","method","body","stringify","console","log","newData","map","item","_id","likes","handleCommentSubmit","e","key","className","children","onSubmit","preventDefault","type","placeholder","value","onChange","target","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mulubrhan/Documents/MERN/client/src/components/screens/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Home = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState(\"\"); // New state variable for the comment input field\n\n  useEffect(() => {\n    fetch(\"/allpost\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    })\n      .then(res => res.json())\n      .then(result => {\n        setData(result.posts);\n      });\n  }, []);\n\n  const likepost = (id) => {\n    // ...\n  };\n\n  const unlikepost = (id) => {\n    // ...\n  };\n\n  const makeComment = (text, postId) => {\n    fetch(\"/comment\", {\n      method: \"put\",\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    })\n      .then(res => res.json())\n      .then(result => {\n        console.log(result);\n        const newData = data.map(item => {\n          if (item._id === result._id) {\n            return { ...item, likes: result.likes };\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n        setComment(\"\"); // Reset the comment input field\n      });\n  };\n\n  const handleCommentSubmit = (e, postId) => {\n    if (e.key === \"Enter\") {\n      makeComment(comment, postId);\n    }\n  };\n\n  return (\n    <div className=\"home\">\n      {data.map(item => {\n        return (\n          <div className=\"card home-card\" key={item._id}>\n            {/* ... */}\n            <form onSubmit={(e) => e.preventDefault()}>\n              <input\n                type=\"text\"\n                placeholder=\"add a comment\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                onKeyPress={(e) => handleCommentSubmit(e, item._id)}\n              />\n            </form>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}