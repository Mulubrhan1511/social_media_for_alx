{"ast":null,"code":"var _jsxFileName = \"/home/mulubrhan/Documents/MERN/client/src/components/screens/CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport M from \"materialize-css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CretePost = () => {\n  _s();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    if (url) {\n      fetch(\"/creatpost\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          title,\n          body,\n          pic: url\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.error) {\n          M.toast({\n            html: data.error,\n            classes: \"#c62828 red darken-3\"\n          });\n        } else {\n          M.toast({\n            html: \"Created post successfully\",\n            classes: \"#43a047 green darken-1\"\n          });\n          navigate(\"/\");\n        }\n      });\n    }\n  }, [url]);\n  const postDetails = () => {\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"dhw1mueq4\");\n    fetch(\"https://api.cloudinary.com/v1_1/dhw1mueq4/image/upload\", {\n      method: 'POST',\n      body: data\n    }).then(res => res.json()).then(data => {\n      setUrl(data.url);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card input-filed\",\n    style: {\n      margin: \"30px auto\",\n      maxWidth: \"500px\",\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"body\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-field input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn #64b5f6 blue darken-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-path-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"file-path validate\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n      onClick: () => postDetails(),\n      children: \"Submit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(CretePost, \"GqT+H759SZlUklD7cWt6BGS0/w0=\", false, function () {\n  return [useNavigate];\n});\n_c = CretePost;\nexport default CretePost;\nvar _c;\n$RefreshReg$(_c, \"CretePost\");","map":{"version":3,"names":["React","useState","useEffect","M","useNavigate","jsxDEV","_jsxDEV","CretePost","_s","navigate","title","setTitle","body","setBody","image","setImage","url","setUrl","fetch","method","headers","localStorage","getItem","JSON","stringify","pic","then","res","json","data","error","toast","html","classes","postDetails","FormData","append","catch","err","console","log","className","style","margin","maxWidth","padding","textAlign","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","files","onClick","_c","$RefreshReg$"],"sources":["/home/mulubrhan/Documents/MERN/client/src/components/screens/CreatePost.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport M from \"materialize-css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst CretePost = ()=>{\n    const navigate = useNavigate();\n    const [title,setTitle] = useState(\"\")\n    const [body,setBody] = useState(\"\")\n    const [image,setImage] = useState(\"\")\n    const [url,setUrl] = useState(\"\")\n    useEffect(()=>{\n        if(url){\n            fetch(\"/creatpost\", {\n                method: \"POST\",\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n                body: JSON.stringify({ \n                    title, \n                    body,\n                    pic:url\n                 }),\n              })\n                .then(res => res.json())\n                .then(data => {\n                  \n                  if (data.error) {\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n                  } else {\n                    M.toast({ html: \"Created post successfully\", classes: \"#43a047 green darken-1\" });\n                    navigate(\"/\");\n                  }\n                });\n        }\n    },[url])\n    const postDetails = ()=>{\n        const data = new FormData()\n        data.append(\"file\",image)\n        data.append(\"upload_preset\",\"insta-clone\")\n        data.append(\"cloud_name\",\"dhw1mueq4\")\n        fetch(\"https://api.cloudinary.com/v1_1/dhw1mueq4/image/upload\",{\n            method:'POST',\n            body:data\n        })\n        .then((res)=>res.json())\n        .then(data=>{\n            setUrl(data.url)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n        \n    }\n    return(\n        <div className=\"card input-filed\"\n        style={{\n            margin:\"30px auto\",\n            maxWidth:\"500px\",\n            padding:\"20px\",\n            textAlign:\"center\"\n        }}>\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\n            <input type=\"text\" placeholder=\"body\" value={body} onChange={(e) => setBody(e.target.value)}/>\n            <div className=\"file-field input-field\">\n                <div className=\"btn #64b5f6 blue darken-1\">\n                    <span>Upload image</span>\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>postDetails()}>\n                Submit Post\n            </button>\n        </div>\n    )\n}\nexport default CretePost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}