{"ast":null,"code":"var _jsxFileName = \"/home/mulubrhan/Documents/MERN/client/src/components/screens/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      setData(result.posts);\n    });\n  }, []);\n  const likepost = id => {\n    fetch(\"/like\", {\n      method: 'put',\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id === result._id) {\n          return {\n            ...item,\n            likes: result.likes\n          };\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    });\n  };\n  const unlikepost = id => {\n    fetch(\"/unlike\", {\n      method: 'put',\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id === result._id) {\n          return {\n            ...item,\n            likes: result.likes\n          };\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    });\n  };\n  const makeComment = (text, postedId) => {\n    fetch('/comment'), {\n      method: \"put\",\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        postId: Id,\n        text\n      })\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: item.postedBy.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\"\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), item.likes.includes(user._id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n            onClick: () => {\n              unlikepost(item._id);\n            },\n            children: \"UnLike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n            onClick: () => {\n              likepost(item._id);\n            },\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [item.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","user","JSON","parse","localStorage","getItem","data","setData","fetch","headers","then","res","json","result","posts","likepost","id","method","body","stringify","postId","newData","map","item","_id","likes","unlikepost","makeComment","text","postedId","Id","className","children","postedBy","name","fileName","_jsxFileName","lineNumber","columnNumber","src","photo","style","color","includes","onClick","length","title","type","placeholder","_c","$RefreshReg$"],"sources":["/home/mulubrhan/Documents/MERN/client/src/components/screens/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Home = ()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    const [data,setData] = useState([])\n    useEffect(()=>{\n        fetch('/allpost',{\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            setData(result.posts)\n        })\n    },[])\n    const likepost = (id) => {\n        fetch(\"/like\", {\n          method: 'put',\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            postId: id\n          })\n        }).then(res => res.json())\n          .then(result => {\n            const newData = data.map(item => {\n              if (item._id === result._id) {\n                return { ...item, likes: result.likes };\n              } else {\n                return item;\n              }\n            });\n            setData(newData);\n          });\n      };\n      \n      const unlikepost = (id) => {\n        fetch(\"/unlike\", {\n          method: 'put',\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            postId: id\n          })\n        }).then(res => res.json())\n          .then(result => {\n            const newData = data.map(item => {\n              if (item._id === result._id) {\n                return { ...item, likes: result.likes };\n              } else {\n                return item;\n              }\n            });\n            setData(newData);\n          });\n      };\n    const makeComment = (text,postedId)=>{\n      fetch('/comment'),{\n        method:\"put\",\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          postId: Id,\n          text\n        })\n      }\n    }\n    return(\n        <div className=\"home\">\n            {\n                data.map(item=>{\n                    return (\n                        <div className=\"card home-card\" key={item._id}>\n                        <h5>{item.postedBy.name}</h5>\n                        <div className=\"card-image\"> \n                            <img src={item.photo} />\n                        </div>\n                        <div className=\"card-content\">\n                        <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                        {item.likes.includes(user._id)\n                        ?\n                        <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>{unlikepost(item._id)}}>\n                            UnLike\n                        </button>\n                        \n                        :\n                        <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>{likepost(item._id)}}>\n                        Like\n                    </button>\n                        \n                        }\n                        \n                        \n                        <h6>{item.likes.length} likes</h6>\n                            <h6>{item.title}</h6>\n                            <p>{item.body}</p>\n                            <input type=\"text\" placeholder=\"add a comment\"/>\n                        </div>\n                    </div>\n                    )\n                })\n            }\n            \n            \n        </div>\n    )}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}